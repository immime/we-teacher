<template>
  <view class="calendar-wrap">
    <calendar id="Calendar" bind:select="selectDay" bind:selectMonth="selectMonth"></Calendar>
  </view>
  <tabPane tabList="{{ tabList }}" active="{{ active }}" bind:changeTap="changeTap">
    <view slot="{{tabList[0].slot}}">
      <loading wx:if="{{getDayLoading}}"></loading>
      <block wx:else>
        <no-data wx:if="{{hasDayData}}" text="当前日期无排课"></no-data>
        <block wx:else>
          <home-list-item wx:for="{{dayListData}}" wx:key="index" item="{{ item }}"></home-list-item>
        </block>
      </block>
    </view>
    <view slot="{{tabList[1].slot}}">
      <loading wx:if="{{getMonthLoading}}"></loading>
      <block wx:else>
        <no-data wx:if="{{hasMonthData}}" text="当前月无排课"></no-data>
        <block wx:else>
          <home-list-item wx:for="{{monthListData}}" wx:key="index" item="{{ item }}"></home-list-item>
        </block>
      </block>
    </view>
  </tabPane>
</template>

<script>
import store from '../store'
import mpx, { createPage } from '@mpxjs/core'
import { getToken } from '../utils/util'
createPage({
  onLoad () {
  },
  data: {
    tabList: [
      {
        name: '日课程',
        slot: 'day'
      },
      {
        name: '月课程',
        slot: 'month'
      }
    ],
    active: 0,
    selectedDay: '',
    selectedMonth: '',
    getDayLoading: true,
    getMonthLoading: true
  },
  computed: {
    ...store.mapGetters(['dayListData', 'monthListData']),
    hasDayData: function () {
      return this.dayListData.length === 0
    },
    hasMonthData: function () {
      return this.monthListData.length === 0
    }
  },
  methods: {
    ...store.mapActions(['getDayList', 'getMonthList']),
    goToGetDayList (day) {
      this.getDayLoading = true
      this.getDayList({ day }).then((data) => {
      }).finally(() => {
        this.getDayLoading = false
      })
    },
    goToGetMonthList (month) {
      this.getMonthLoading = true
      this.getMonthList({ month }).then((data) => {
      }).finally(() => {
        this.getMonthLoading = false
      })
    },
    selectDay (e) {
      this.selectedDay = e.detail || ''
      this.active = 0
      this.goToGetDayList(this.selectedDay)
    },
    selectMonth (e) {
      this.selectedMonth = e.detail || ''
      this.active = 1
      this.goToGetMonthList(this.selectedMonth)
    },
    changeTap (e) {
    }
  },
  onReady () {
    if (!getToken()) {
      mpx.reLaunch({
        url: 'login'
      })
    }
  }
})
  
</script>

<script type="application/json">
  {
    "usingComponents": {
      "calendar": "../components/calendar/index",
      "loading": "../components/loading",
      "no-data": "../components/noData",
      "home-list-item": "../components/homeListItem",
      "tabPane": "../components/tabPane"
    }
  }
</script>

<style lang="less">
</style>
