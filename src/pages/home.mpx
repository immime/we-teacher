<template>
  <view class="calendar-wrap">
    <calendar calendarConfig="{{ calendarConfig }}" bind:afterTapDay="afterTapDay"
    bind:whenChangeMonth="whenChangeMonth"
    ></calendar>
  </view>
  <view class="tab-wrap">
    <van-tabs active="{{ active }}">
      <van-tab title="日课程" class="tab">
        <loading wx:if="{{getDayLoading}}"></loading>
        <block wx:else>
          <no-data wx:if="{{hasDayData}}" text="当前日期无排课"></no-data>
          <block wx:else>
            <home-list-item wx:for="{{dayListData}}" wx:key="index" item="{{ item }}"></home-list-item>
          </block>
        </block>
      </van-tab>
      <van-tab title="月课程" class="tab">
        <loading wx:if="{{getMonthLoading}}"></loading>
        <block wx:else>
          <no-data wx:if="{{hasMonthData}}" text="当前月无排课"></no-data>
          <block wx:else>
            <home-list-item wx:for="{{monthListData}}" wx:key="index" item="{{ item }}"></home-list-item>
          </block>
        </block>
      </van-tab>
    </van-tabs>
  </view>
</template>

<script>
import store from '../store'
import mpx, { createPage } from '@mpxjs/core'
import { getToken } from '../utils/util'
createPage({
  onLoad () {
  },
  data: {
    calendarConfig: {
      theme: 'elegant',
      defaultDay: true
    },
    active: 0,
    getDayLoading: false,
    getMonthLoading: false
  },
  computed: {
    ...store.mapGetters(['dayListData', 'monthListData']),
    hasDayData: function () {
      return this.dayListData.length === 0
    },
    hasMonthData: function () {
      return this.monthListData.length === 0
    }
  },
  methods: {
    ...store.mapActions(['getDayList', 'getMonthList']),
    afterTapDay (e) {
      const day = this.changeDay(e.detail)
      this.goToGetDayList(day)
    },
    whenChangeMonth (e) {
      const ym = e.detail.next
      const month = this.changeMonth(ym)
      this.goToGetMonthList(month)
    },
    goToGetDayList (day) {
      this.setData({ getDayLoading: true })
      this.getDayList({ day }).then((data) => {
      }).finally(() => {
        this.setData({ getDayLoading: false })
      })
    },
    goToGetMonthList (month) {
      this.setData({ getMonthLoading: true })
      this.getMonthList({ month }).then((data) => {
      }).finally(() => {
        this.setData({ getMonthLoading: false })
      })
    },
    changeDay (selectedDay) {
      return `${selectedDay.year}-${selectedDay.month.toString().padStart(2, '0')}-${selectedDay.day.toString().padStart(2,'0')}`
    },
    changeMonth (month) {
      return `${month.year}-${month.month.toString().padStart(2, '0')}`
    }
  },
  onReady () {
    if (!getToken()) {
      mpx.reLaunch({
        url: 'login'
      })
    } else {
      const selectedDay = this.calendar.getSelectedDay()[0]
      const ym = this.calendar.getCurrentYM()
      if (selectedDay) {
        const day = this.changeDay(selectedDay)
        this.goToGetDayList(day)
      }
      if (ym) {
        const month = this.changeMonth(ym)
        this.goToGetMonthList(month)
      }
    }
  }
})
  
</script>

<script type="application/json">
  {
    "usingComponents": {
      "calendar": "../components/calendar/index",
      "loading": "../components/loading",
      "no-data": "../components/noData",
      "home-list-item": "../components/homeListItem",
      "van-tab": "@vant/weapp/dist/tab/index",
      "van-tabs": "@vant/weapp/dist/tabs/index"
    }
  }
</script>

<style lang="less">
</style>
